# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.

name: Run tests (on input)
description: Run integration test with given parameters

inputs:
  tox-env:
    description: "The name of tox environment to run for tests"
    required: true
  spark-version:
    description: "The version of Spark to run the tests on"
    default: 3.4.4
    required: false
    type: string
  bundle-backend:
    description: "The backend to use to deploy the bundle"
    default: yaml
    required: false
    type: string
  storage-backend:
    description: "The object storage backend to be used"
    default: s3
    required: false
    type: string
  cos-model:
    description: "The name of the model to deploy COS bundle"
    default:
    required: false
    type: string
  juju-snap-channel:
    description: "The channel from which juju snap is to be downloaded"
    required: false
    default: 3.6/stable
    type: string
  juju-agent-version:
    description: "The version of the Juju agent to be used"
    required: false
    default: 3.6.0
    type: string
  azure-storage-account:
    description: "The Azure Storage account name to be used for test"
    required: false
    default: "dummy-account"
    type: string
  azure-storage-key:
    description: "The Azure Storage account secret key to be used for test"
    required: false
    default: "dummy-key"
    type: string
  pytest-args:
    description: "Extra arguments to be passed to pytest command"
    required: false
    default: ""
    type: string

runs:
  using: "composite"
  steps:
    - name: (GitHub hosted) Free up disk space
      shell: bash
      run: |
        printf '\nDisk usage before cleanup\n'
        df --human-readable
        # Based on https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
        rm -r /usr/share/dotnet
        rm -r /opt/hostedtoolcache/
        printf '\nDisk usage after cleanup\n'
        df --human-readable
    - name: Checkout repo
      uses: actions/checkout@v4
    - id: setup-python
      name: Setup Python
      uses: actions/setup-python@v5.0.0
      with:
        python-version: "3.10"
        architecture: x64
    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
        juju-channel: ${{ inputs.juju-snap-channel }}
        provider: microk8s
        channel: 1.32-strict/stable
        bootstrap-options: "--agent-version ${{ inputs.juju-agent-version }}"
        microk8s-group: snap_microk8s
        microk8s-addons: "rbac dns minio metallb:10.64.140.43-10.64.140.49"
    - name: Install tox
      shell: bash
      run: |
        pip install tox
    - name: Select tests
      id: select-tests
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "schedule" ]
        then
          echo Running unstable and stable tests
          echo "mark_expression=" >> $GITHUB_OUTPUT
        else
          echo Skipping unstable tests
          echo "mark_expression=not unstable" >> $GITHUB_OUTPUT
        fi
    - id: setup-terraform
      name: Install terraform if needed
      shell: bash
      run: |
        if ! [ -x "$(command -v terraform)" ]; then
          echo "Installing terraform from snap"
          sudo snap install terraform --classic
        fi
    - id: cache-images
      name: Cache Images Locally
      shell: bash
      run: |
        IMAGES=(
            "ghcr.io/canonical/charmed-spark-kyuubi@sha256:96492ac6d3e1b5a43d10dcefc1e92e32585b9158256e4720e98bc827f9773133" # 3.4.4_1.10.2 2025-06-30
            "ghcr.io/canonical/charmed-spark-kyuubi@sha256:b91f24a14889bc4953560c5d54d1cb7c00d5bf238607dde70b02e5ce17190b5f" # 3.5.4_1.9.0 2025-05-02
            "ghcr.io/canonical/charmed-spark@sha256:aaf56fbae830756295e9547593adedae20091107497d00a10f902bb22b5c88f5"        # 3.4.4 2025-06-30
            "ghcr.io/canonical/charmed-spark@sha256:857f69f583fd8ee6238d1e556f749e29847ec83010c5d53f4a66388b00940da5"        # 3.5.4 2025-05-02

            "ghcr.io/canonical/charmed-spark@sha256:7056db56cad6b23927706af3de9d47c47ca61eee1b0a03ec7ed7f43f29503a21"        # 3.4.4 2025-05-06, used by Kyuubi executors
            "ghcr.io/canonical/charmed-spark:3.4.4-22.04_edge"                                                               # 3.4.4, used in integration-basic
            "ghcr.io/canonical/charmed-spark:3.5.4-22.04_edge"                                                               # 3.5.4, used in integration-basic
        )

        for image in "${IMAGES[@]}"; do
            echo "Pulling $image"
            sudo microk8s ctr image pull "$image" > /dev/null 2>&1
        done
    - id: tests-integration
      name: Run Integration Tests
      shell: bash
      env:
        AZURE_STORAGE_ACCOUNT: ${{ inputs.azure-storage-account }}
        AZURE_STORAGE_KEY: ${{ inputs.azure-storage-key }}
      run: |
        juju add-model spark-bundle-test
        juju list-models
        cd python && tox run -e ${{ inputs.tox-env }} -- -m '${{ steps.select-tests.outputs.mark_expression }}' --backend ${{ inputs.bundle-backend }} --cos-model ${{ inputs.cos-model }} --spark-version ${{ inputs.spark-version }} --storage-backend ${{ inputs.storage-backend }} --model spark-bundle-test ${{ inputs.pytest-args }}
        echo "TEST_EXIT_CODE=$?" >> $GITHUB_ENV
    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
      if: ${{ failure() }}
    - id: collect-logs
      name: Collect logs if job failed
      shell: bash
      if: ${{ failure() }}   
      run: |
        juju-crashdump --model spark-bundle-test
        if [[ -n "${{ inputs.cos-model }}" ]]; then
          juju-crashdump --model "${{ inputs.cos-model }}"
        fi
        juju status --model spark-bundle-test
        # get pods 
        kubectl get pods -A
        # events
        kubectl events -A
        # disk space
        printf '\nDisk usage after tests\n'
        df --human-readable
        echo "Done"
    - name: Write test result in JSON format
      shell: bash
      if: always()
      run: |
        STATUS="success"
        if [ "${TEST_EXIT_CODE}" != "0" ]; then
          STATUS="failure"
        fi
        echo '{"tox-env": "${{ inputs.tox-env }}", "spark-version": "${{ inputs.spark-version }}", "bundle-backend": "${{ inputs.bundle-backend }}", "storage-backend": "${{ inputs.storage-backend }}", "cos": "${{ inputs.cos-model != '' }}", "juju-version": "${{ inputs.juju-agent-version }}", "status": "'"$STATUS"'"}' > test-result.json
    - name: Upload the test result as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-results-${{ inputs.tox-env }}-${{ inputs.spark-version }}-${{ inputs.bundle-backend }}-${{ inputs.storage-backend }}-${{ inputs.cos-model }}-${{ inputs.juju-agent-version }}
        path: test-result.json

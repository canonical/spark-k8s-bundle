# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: Run Tests

on:
  schedule:
    - cron: "53 0 * * *" # Daily at 00:53 UTC
  workflow_call:

jobs:
  checks:
    uses: ./.github/workflows/ci-checks.yaml

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    strategy:
      fail-fast: true
      matrix:
        python-version:
          - "3.10"
    needs:
      - checks
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{matrix.python-version}}
          architecture: x64
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - id: tests-unit
        name: Run Unittests
        run: |
          cd python && tox -e unit

  integration-tests:
    name: "${{ matrix.tox-environment }}: ${{ matrix.bundle-backend }} bundle | spark ${{ matrix.spark-version }} | ${{ matrix.storage-backend }} storage | juju ${{ matrix.juju.agent }} | ${{ matrix.cos }}"
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    strategy:
      max-parallel: 15
      fail-fast: false
      matrix:
        spark-version: ["3.4.2", "3.5.1"]
        bundle-backend: ["yaml", "terraform"]
        storage-backend: ["s3", "azure"]
        cos-model: ["", "cos"]
        tox-environment:
          - integration-sparkjob
          - integration-bundle
          - integration-kyuubi
        juju:
          - snap_channel: "3.5/stable"
            agent: "3.5.6"
          - snap_channel: "3.6/stable"
            agent: "3.6.2"
        exclude:
          # COS bundle is mandatory for sparkjob test.
          - tox-environment: integration-sparkjob # COS is mandatory for the sparkjob test
            cos-model:

          # COS bundle is mandatory for Kyuubi test.
          - tox-environment: integration-kyuubi
            cos-model:

        include:
          - tox-environment: integration-basic

    needs:
      - checks
      - unit-tests
    steps:
      - name: (GitHub hosted) Free up disk space
        timeout-minutes: 5
        run: |
          printf '\nDisk usage before cleanup\n'
          df --human-readable
          # Based on https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
          rm -r /usr/share/dotnet
          rm -r /opt/hostedtoolcache/
          printf '\nDisk usage after cleanup\n'
          df --human-readable
      - name: Checkout repo
        uses: actions/checkout@v4
      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10"
          architecture: x64
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          juju-channel: ${{ matrix.juju.snap_channel || '3.5/stable' }}
          provider: microk8s
          channel: 1.32-strict/stable
          bootstrap-options: "--agent-version ${{ matrix.juju.agent || '3.5.6' }}"
          microk8s-group: snap_microk8s
          microk8s-addons: "rbac dns minio metallb:10.64.140.43-10.64.140.49"
      - name: Install tox & poetry
        run: |
          pip install tox
          pip install poetry
      - name: Select tests
        id: select-tests
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> $GITHUB_OUTPUT
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> $GITHUB_OUTPUT
          fi
      - id: setup-terraform
        name: Install terraform if needed
        run: |
          if ! [ -x "$(command -v terraform)" ]; then
            echo "Installing terraform from snap"
            sudo snap install terraform --classic
          fi
      - id: cache-image
        name: Cache Image Locally
        run: |
          # Download image for avoiding time out
          IMAGE="ghcr.io/canonical/charmed-spark-kyuubi@sha256:9268d19a6eef91914e874734b320fab64908faf0f7adb8856be809bc60ecd1d0"

          docker pull $IMAGE
          docker save $IMAGE -o image.tar
          sudo microk8s ctr images import --base-name $IMAGE image.tar
          docker rmi $IMAGE
          rm image.tar
      - id: tests-integration
        name: Run Integration Tests
        timeout-minutes: 30
        env:
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        run: |

          juju list-models

          cd python && tox run -e ${{ matrix.tox-environment }} -- -m '${{ steps.select-tests.outputs.mark_expression }}' --backend ${{ matrix.bundle-backend }} --cos-model ${{ matrix.cos-model }} --spark-version ${{ matrix.spark-version }} --storage-backend ${{ matrix.storage-backend }} --keep-models

# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: Run CI tests

on:
  workflow_call:

jobs:
  # checks:
  #   uses: ./.github/workflows/ci-checks.yaml

  integration-tests:
    name: "${{ matrix.tox-env }}: spark-${{ matrix.spark-version }} | ${{ matrix.bundle-backend }} | ${{ matrix.storage-backend }} | juju ${{ matrix.juju.agent }} | ${{ matrix.cos-model }}"
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    strategy:
      max-parallel: 15
      fail-fast: false
      matrix:
        tox-env:
          - integration-sparkjob
          - integration-bundle
          - integration-kyuubi
        bundle-backend: ["terraform"]
        spark-version: ["3.4.4"]
        storage-backend: ["s3", "azure"]
        cos-model: ["cos"]
        juju:
          - snap_channel: "3.5/stable"
            agent: "3.5.6"
          - snap_channel: "3.6/stable"
            agent: "3.6.5"
        include:
          - tox-env: integration-basic
            spark-version: 3.4.4
            juju:
              - snap_channel: "3.6/stable"
                agent: "3.6.5"
          - tox-env: integration-basic
            spark-version: 3.5.4
            juju:
              - snap_channel: "3.6/stable"
                agent: "3.6.5"
          - tox-env: integration-bundle
            bundle-backend: yaml
            spark-version: 3.4.4
            juju:
              - snap_channel: "3.6/stable"
                agent: "3.6.5"

    # needs:
    #   - checks
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Run integration test
        uses: ./.github/actions/run-test
        with:
          tox-env: ${{ matrix.tox-env }}
          bundle-backend: ${{ matrix.bundle-backend }}
          spark-version: ${{ matrix.spark-version }}
          storage-backend: ${{ matrix.storage-backend }}
          cos-model: ${{ matrix.cos-model }}
          juju-snap-channel: ${{ matrix.juju.snap_channel || '3.6/stable' }}
          juju-agent-version: ${{ matrix.juju.agent || '3.6.5' }}
          azure-storage-account: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          azure-storage-key: ${{ secrets.AZURE_STORAGE_KEY }}
      - name: Collect logs if job failed
        if: ${{ failure() }}   
        run: |
          juju-crashdump
          echo "Done"
      - name: Write matrix result
        if: always()
        run: |
          echo '{"tox-env": "${{ matrix.tox-env }}", "spark-version": "${{ matrix.spark-version }}", "bundle-backend": "${{ matrix.bundle-backend }}", "storage-backend": "${{ matrix.storage-backend }}", "cos": "${{ matrix.cos-model != '' }}", "juju-version": "${{ matrix.juju.agent }}", "status": "${{ job.status }}"}' > result.json
      - name: Upload result artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "matrix-results"
          path: matrix-result.json
  
  aggregate-results:
    name: Aggregate Results
    runs-on: ubuntu-22.04
    needs: integration-tests
    if: always()  # Run even if some matrix jobs failed
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: matrix-results
          path: results
      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: 3.12
          architecture: x64
      - name: Install pandas & tabulate
        run: |
          pipx install pandas
          pipx install tabulate

      - name: Run result aggregation script
        run: python3 .github/scripts/aggregate_results.py results/

      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: matrix-summary
          path: matrix-summary.md

      - name: Add to GitHub Summary
        run: cat matrix-summary.md >> $GITHUB_STEP_SUMMARY


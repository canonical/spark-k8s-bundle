# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tool.pytest.ini_options]
addopts = "--doctest-modules --cov=./spark_test"

[tool.flake8]
per-file-ignores = [
    'tests/*: D',
    'tests/test_utils.py: D, F601'
]
ignore = [
    # Ignored by black
    'E203', 'E266', 'E501', 'W503',
    # Ignored to conform to PEP257
    'D203', 'D212', 'D213', 'D214', 'D215', 'D404', 'D405', 'D406', 'D407', 'D408', 'D409', 'D410', 'D411',
    'D413', 'D415', 'D416', 'D417',
    # Ignored to work with Sphinx
    'RST303', 'RST304', 'RST307',
    # Ignored unused imports since they are required by pytest fixtures sometimes
    'F401', 'F811'
]
# line length is intentionally set to 80 here because black uses Bugbear
# See https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#line-length for more details
max-line-length = "120"
max-complexity = "18"
select = ['B','C','D','E','F','W','T4','B9','RST','DAR']
docstring_style = "sphinx"

[tool.isort]
py_version = 3
profile = 'black'
known_first_party = ['spark_test','tests']
skip_gitignore = true

[tool.mypy]
follow_imports = "silent"

[[tool.mypy.overrides]]
module = [
    "parameterized",
    "envyaml",
    "pytest"
]
ignore_missing_imports = true

[tool.poetry]
name = "spark-test"
version = "0.0.1"
description = "This project provides some utilities function and CLI commands to test Charmed Spark on K8s."
authors = [
    "Canonical Data Platform <data-platform@lists.launchpad.net>"
]
license = "Apache-2.0"
readme = "README.md"
packages = []

[tool.poetry.dependencies]
python = ">3.8,<4.0"
spark8t = { git = "https://github.com/canonical/spark-k8s-toolkit-py.git", tag="v0.0.7" }
boto3 = ">=1.34.55"
pytest = ">=6.2"
azure-storage-blob = "^12.21.0"

[tool.poetry.group.fmt]
optional = true

[tool.poetry.group.fmt.dependencies]
black = ">=21.12b0"
isort = ">=5.10"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
codespell = "^2.1.0"
flake8 = ">=4.0.1"
Flake8-pyproject = ">=1.1.0"
mypy = ">=0.910"
pytest-mypy = ">=0.10.3"

[tool.poetry.group.unit]
optional = true

[tool.poetry.group.unit.dependencies]
pytest-cov = ">=3.0"
pytest-mock = ">=3.10"
parameterized = ">=0.9.0"

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
pytest-cov = ">=3.0"
pytest-mock = ">=3.10"
parameterized = ">=0.9.0"
juju = ">=3.4.0"
pytest-operator = ">0.20"
pyhive = {extras = ["hive_pure_sasl"], version = "^0.7.0"}
psycopg2-binary = "^2.9.9"
tenacity = "^9.0.0"
requests = "^2.32.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

